function PHI = calcJacobian(state,timeStep,m,cg,imm)
u = state(1);
v = state(2);
w = state(3);
p = state(4);
q = state(5);
r = state(6);
phi = state(10);
theta = state(11);
ps = state(12);

Xcg = cg(1);
Ycg = cg(2);
Zcg = cg(3);

imm11 = imm(1,1);
imm12 = imm(1,2);
imm13 = imm(1,3); 
imm14 = imm(1,4); 
imm15 = imm(1,5); 
imm16 = imm(1,6);
imm21 = imm(2,1);
imm22 = imm(2,2); 
imm23 = imm(2,3); 
imm24 = imm(2,4); 
imm25 = imm(2,5); 
imm26 = imm(2,6);
imm31 = imm(3,1);
imm32 = imm(3,2); 
imm33 = imm(3,3); 
imm34 = imm(3,4); 
imm35 = imm(3,5); 
imm36 = imm(3,6);
imm41 = imm(4,1);
imm42 = imm(4,2); 
imm43 = imm(4,3); 
imm44 = imm(4,4); 
imm45 = imm(4,5); 
imm46 = imm(4,6);
imm51 = imm(5,1);
imm52 = imm(5,2); 
imm53 = imm(5,3); 
imm54 = imm(5,4); 
imm55 = imm(5,5); 
imm56 = imm(5,6);
imm61 = imm(6,1);
imm62 = imm(6,2); 
imm63 = imm(6,3); 
imm64 = imm(6,4); 
imm65 = imm(6,5); 
imm66 = imm(6,6);

f1 = [imm13*q - imm12*r + imm14*(Ycg*m*q + Zcg*m*r) - Xcg*imm16*m*r - Xcg*imm15*m*q, imm11*r - imm13*p + imm15*(Xcg*m*p + Zcg*m*r) - Ycg*imm16*m*r - Ycg*imm14*m*p, imm12*p - imm11*q + imm16*(Xcg*m*p + Ycg*m*q) - Zcg*imm14*m*p - Zcg*imm15*m*q, imm12*(w - Xcg*q + 2*Ycg*p) - imm11*(Ycg*q + Zcg*r) - imm14*(Ycg*m*v + Zcg*m*w) - imm13*(v + Xcg*r - 2*Zcg*p) + Xcg*imm15*m*v + Xcg*imm16*m*w, imm13*(u - Ycg*r + 2*Zcg*q) - imm12*(Xcg*p + Zcg*r) - imm11*(w - 2*Xcg*q + Ycg*p) - imm15*(Xcg*m*u + Zcg*m*w) + Ycg*imm14*m*u + Ycg*imm16*m*w, imm11*(v + 2*Xcg*r - Zcg*p) - imm13*(Xcg*p + Ycg*q) - imm16*(Xcg*m*u + Ycg*m*v) - imm12*(u - 2*Ycg*r + Zcg*q) + Zcg*imm14*m*u + Zcg*imm15*m*v, 0, 0, 0,                                                                                                   0,                                                                                0,                                                                                                                          0, 0, 0];
f2 = [imm23*q - imm22*r + imm24*(Ycg*m*q + Zcg*m*r) - Xcg*imm26*m*r - Xcg*imm25*m*q, imm21*r - imm23*p + imm25*(Xcg*m*p + Zcg*m*r) - Ycg*imm26*m*r - Ycg*imm24*m*p, imm22*p - imm21*q + imm26*(Xcg*m*p + Ycg*m*q) - Zcg*imm24*m*p - Zcg*imm25*m*q, imm22*(w - Xcg*q + 2*Ycg*p) - imm21*(Ycg*q + Zcg*r) - imm24*(Ycg*m*v + Zcg*m*w) - imm23*(v + Xcg*r - 2*Zcg*p) + Xcg*imm25*m*v + Xcg*imm26*m*w, imm23*(u - Ycg*r + 2*Zcg*q) - imm22*(Xcg*p + Zcg*r) - imm21*(w - 2*Xcg*q + Ycg*p) - imm25*(Xcg*m*u + Zcg*m*w) + Ycg*imm24*m*u + Ycg*imm26*m*w, imm21*(v + 2*Xcg*r - Zcg*p) - imm23*(Xcg*p + Ycg*q) - imm26*(Xcg*m*u + Ycg*m*v) - imm22*(u - 2*Ycg*r + Zcg*q) + Zcg*imm24*m*u + Zcg*imm25*m*v, 0, 0, 0,                                                                                                   0,                                                                                0,                                                                                                                          0, 0, 0];
f3 =[imm33*q - imm32*r + imm34*(Ycg*m*q + Zcg*m*r) - Xcg*imm36*m*r - Xcg*imm35*m*q, imm31*r - imm33*p + imm35*(Xcg*m*p + Zcg*m*r) - Ycg*imm36*m*r - Ycg*imm34*m*p, imm32*p - imm31*q + imm36*(Xcg*m*p + Ycg*m*q) - Zcg*imm34*m*p - Zcg*imm35*m*q, imm32*(w - Xcg*q + 2*Ycg*p) - imm31*(Ycg*q + Zcg*r) - imm34*(Ycg*m*v + Zcg*m*w) - imm33*(v + Xcg*r - 2*Zcg*p) + Xcg*imm35*m*v + Xcg*imm36*m*w, imm33*(u - Ycg*r + 2*Zcg*q) - imm32*(Xcg*p + Zcg*r) - imm31*(w - 2*Xcg*q + Ycg*p) - imm35*(Xcg*m*u + Zcg*m*w) + Ycg*imm34*m*u + Ycg*imm36*m*w, imm31*(v + 2*Xcg*r - Zcg*p) - imm33*(Xcg*p + Ycg*q) - imm36*(Xcg*m*u + Ycg*m*v) - imm32*(u - 2*Ycg*r + Zcg*q) + Zcg*imm34*m*u + Zcg*imm35*m*v, 0, 0, 0,                                                                                                   0,                                                                                0,                                                                                                                          0, 0, 0];
f4 = [imm43*q - imm42*r + imm44*(Ycg*m*q + Zcg*m*r) - Xcg*imm46*m*r - Xcg*imm45*m*q, imm41*r - imm43*p + imm45*(Xcg*m*p + Zcg*m*r) - Ycg*imm46*m*r - Ycg*imm44*m*p, imm42*p - imm41*q + imm46*(Xcg*m*p + Ycg*m*q) - Zcg*imm44*m*p - Zcg*imm45*m*q, imm42*(w - Xcg*q + 2*Ycg*p) - imm41*(Ycg*q + Zcg*r) - imm44*(Ycg*m*v + Zcg*m*w) - imm43*(v + Xcg*r - 2*Zcg*p) + Xcg*imm45*m*v + Xcg*imm46*m*w, imm43*(u - Ycg*r + 2*Zcg*q) - imm42*(Xcg*p + Zcg*r) - imm41*(w - 2*Xcg*q + Ycg*p) - imm45*(Xcg*m*u + Zcg*m*w) + Ycg*imm44*m*u + Ycg*imm46*m*w, imm41*(v + 2*Xcg*r - Zcg*p) - imm43*(Xcg*p + Ycg*q) - imm46*(Xcg*m*u + Ycg*m*v) - imm42*(u - 2*Ycg*r + Zcg*q) + Zcg*imm44*m*u + Zcg*imm45*m*v, 0, 0, 0,                                                                                                   0,                                                                                0,                                                                                                                          0, 0, 0];
f5 = [imm53*q - imm52*r + imm54*(Ycg*m*q + Zcg*m*r) - Xcg*imm56*m*r - Xcg*imm55*m*q, imm51*r - imm53*p + imm55*(Xcg*m*p + Zcg*m*r) - Ycg*imm56*m*r - Ycg*imm54*m*p, imm52*p - imm51*q + imm56*(Xcg*m*p + Ycg*m*q) - Zcg*imm54*m*p - Zcg*imm55*m*q, imm52*(w - Xcg*q + 2*Ycg*p) - imm51*(Ycg*q + Zcg*r) - imm54*(Ycg*m*v + Zcg*m*w) - imm53*(v + Xcg*r - 2*Zcg*p) + Xcg*imm55*m*v + Xcg*imm56*m*w, imm53*(u - Ycg*r + 2*Zcg*q) - imm52*(Xcg*p + Zcg*r) - imm51*(w - 2*Xcg*q + Ycg*p) - imm55*(Xcg*m*u + Zcg*m*w) + Ycg*imm54*m*u + Ycg*imm56*m*w, imm51*(v + 2*Xcg*r - Zcg*p) - imm53*(Xcg*p + Ycg*q) - imm56*(Xcg*m*u + Ycg*m*v) - imm52*(u - 2*Ycg*r + Zcg*q) + Zcg*imm54*m*u + Zcg*imm55*m*v, 0, 0, 0,                                                                                                   0,                                                                                0,                                                                                                                          0, 0, 0];
f6 = [imm63*q - imm62*r + imm64*(Ycg*m*q + Zcg*m*r) - Xcg*imm66*m*r - Xcg*imm65*m*q, imm61*r - imm63*p + imm65*(Xcg*m*p + Zcg*m*r) - Ycg*imm66*m*r - Ycg*imm64*m*p, imm62*p - imm61*q + imm66*(Xcg*m*p + Ycg*m*q) - Zcg*imm64*m*p - Zcg*imm65*m*q, imm62*(w - Xcg*q + 2*Ycg*p) - imm61*(Ycg*q + Zcg*r) - imm64*(Ycg*m*v + Zcg*m*w) - imm63*(v + Xcg*r - 2*Zcg*p) + Xcg*imm65*m*v + Xcg*imm66*m*w, imm63*(u - Ycg*r + 2*Zcg*q) - imm62*(Xcg*p + Zcg*r) - imm61*(w - 2*Xcg*q + Ycg*p) - imm65*(Xcg*m*u + Zcg*m*w) + Ycg*imm64*m*u + Ycg*imm66*m*w, imm61*(v + 2*Xcg*r - Zcg*p) - imm63*(Xcg*p + Ycg*q) - imm66*(Xcg*m*u + Ycg*m*v) - imm62*(u - 2*Ycg*r + Zcg*q) + Zcg*imm64*m*u + Zcg*imm65*m*v, 0, 0, 0,                                                                                                   0,                                                                                0,                                                                                                                          0, 0, 0];
f7 = [                                                           cos(ps)*cos(theta),                                                             -cos(phi)*sin(ps),                                                              sin(phi)*sin(ps),                                                                                                                                             0,                                                                                                                                             0,                                                                                                                                             0, 1, 0, 0, w*cos(phi)*sin(ps) + v*sin(phi)*sin(ps) + cos(phi)*cos(ps)*sin(theta) - cos(ps)*sin(phi)*sin(theta), cos(phi)*cos(ps)*cos(theta) - u*cos(ps)*sin(theta) + cos(ps)*cos(theta)*sin(phi), w*cos(ps)*sin(phi) - v*cos(phi)*cos(ps) - sin(phi)*sin(ps)*sin(theta) - u*cos(theta)*sin(ps) - cos(phi)*sin(ps)*sin(theta), 0, 0];
f8 = [                                                           cos(theta)*sin(ps),                                                              cos(phi)*cos(ps),                                                             -cos(ps)*sin(phi),                                                                                                                                             0,                                                                                                                                             0,                                                                                                                                             0, 0, 1, 0, cos(phi)*sin(ps)*sin(theta) - w*cos(phi)*cos(ps) - v*cos(ps)*sin(phi) - sin(phi)*sin(ps)*sin(theta), cos(phi)*cos(theta)*sin(ps) - u*sin(ps)*sin(theta) + cos(theta)*sin(phi)*sin(ps), u*cos(ps)*cos(theta) - v*cos(phi)*sin(ps) + w*sin(phi)*sin(ps) + cos(phi)*cos(ps)*sin(theta) + cos(ps)*sin(phi)*sin(theta), 0, 0];
f9 = [                                                                  -sin(theta),                                                           cos(theta)*sin(phi),                                                           cos(phi)*cos(theta),                                                                                                                                             0,                                                                                                                                             0,                                                                                                                                             0, 0, 0, 1,                                                       v*cos(phi)*cos(theta) - w*cos(theta)*sin(phi),                   - u*cos(theta) - w*cos(phi)*sin(theta) - v*sin(phi)*sin(theta),                                                                                                                          0, 0, 0];
fsin(phi)*tan(theta),                                                                                                                           cos(phi)*tan(theta), 0, 0, 0,                                                       q*cos(phi)*tan(theta) - r*sin(phi)*tan(theta),                    r*cos(phi)*(tan(theta)^2 + 1) + q*sin(phi)*(tan(theta)^2 + 1),                                                                                                                          0, 0, 0];
fcos(phi),                                                                                                                                     -sin(phi), 0, 0, 0,                                                                           - r*cos(phi) - q*sin(phi),                                                                                0,                                                                                                                          0, 0, 0];
fsin(phi)/cos(theta),                                                                                                                           cos(phi)/cos(theta), 0, 0, 0,                                                   (q*cos(phi))/cos(theta) - (r*sin(phi))/cos(theta),      (r*cos(phi)*sin(theta))/cos(theta)^2 + (q*sin(phi)*sin(theta))/cos(theta)^2,                                                                                                                          0, 0, 0];
f
f


f = [f1;f2;f3;f4;f5;f6;f7;f8;f9;f10;f11;f12;f13;f14];

PHI = eye(14) + (f*timeStep);
end

